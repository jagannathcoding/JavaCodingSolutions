class Solution {
    public static ArrayList<Integer> topoSort(int V, int[][] edges) {
        // code here
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < V; i++) 
        adj.add(new ArrayList<>());
        
        for (int[] e : edges) 
        adj.get(e[0]).add(e[1]);
        
        
        int indegree[]=new int[V];
        for(int i=0;i<V;i++)
        {
            for(int j:adj.get(i))
            {
                indegree[j]++;
            }
        }
        Queue<Integer>q=new LinkedList<>();
        for(int i=0;i<V;i++)
        {
            if(indegree[i]==0)q.add(i);
        }
        ArrayList<Integer>alist=new ArrayList<>();
        int i=0;
        while(!q.isEmpty())
        {
            int node=q.peek();
            q.remove();
            alist.add(node);
            for(int j:adj.get(node))
            {
                indegree[j]--;
                if(indegree[j]==0)q.add(j);
            }
        }
        return alist;
    }
}
