234. Palindrome Linked List


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

*************Approach-1*********
// Approach-1 (Using extra space)
// T.C : O(n)
// S.C : O(n)
class Solution {
    public boolean isPalindrome(ListNode head) {
        List<Integer>alist=new ArrayList<>();
        ListNode curr=head;
        while(curr!=null)
        {
            alist.add(curr.val);
            curr=curr.next;
        }
        int i=0;
        int j=alist.size()-1;
        while(i<j)
        {
            if(!alist.get(i).equals(alist.get(j)))
            {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}

**************Approach-2******
