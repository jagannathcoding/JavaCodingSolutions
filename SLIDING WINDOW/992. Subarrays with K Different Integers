992. Subarrays with K Different Integers
Solved
Hard
Topics
Companies
Hint
Given an integer array nums and an integer k, return the number of good subarrays of nums.

A good array is an array where the number of different integers in that array is exactly k.

For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.
A subarray is a contiguous part of an array.

 

Example 1:
Input: nums = [1,2,1,2,3], k = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]
Example 2:

Input: nums = [1,2,1,3,4], k = 3
Output: 3
Explanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].
 

Constraints:

1 <= nums.length <= 2 * 104
1 <= nums[i], k <= nums.length


class Solution {

        int slidingWindow(int nums[],int k)
        {
            HashMap<Integer,Integer>map=new HashMap<>();
            int i=0;
            int j=0;
            int cnt=0;
            while(j<nums.length)
            {
                map.put(nums[j],map.getOrDefault(nums[j],0)+1);
                while(map.size()>k)
                {
                    map.put(nums[i],map.get(nums[i])-1);
                    if(map.get(nums[i])==0)
                    {
                        map.remove(nums[i]);
                    }
                    i++;
                }
                cnt+=(j-i+1);
                j++;
            }
            return cnt;
        }

    public int subarraysWithKDistinct(int[] nums, int k) 
    {
        return slidingWindow(nums, k) - slidingWindow(nums, k - 1);
    }
}
//tc:o(n)
//sc:o(n)
