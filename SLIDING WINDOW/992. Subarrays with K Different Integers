992. Subarrays with K Different Integers


class Solution {

        int slidingWindow(int nums[],int k)
        {
            HashMap<Integer,Integer>map=new HashMap<>();
            int i=0;
            int j=0;
            int cnt=0;
            while(j<nums.length)
            {
                map.put(nums[j],map.getOrDefault(nums[j],0)+1);
                while(map.size()>k)
                {
                    map.put(nums[i],map.get(nums[i])-1);
                    if(map.get(nums[i])==0)
                    {
                        map.remove(nums[i]);
                    }
                    i++;
                }
                cnt+=(j-i+1);
                j++;
            }
            return cnt;
        }

    public int subarraysWithKDistinct(int[] nums, int k) 
    {
        return slidingWindow(nums, k) - slidingWindow(nums, k - 1);
    }
}
//tc:o(n)
//sc:o(n)
