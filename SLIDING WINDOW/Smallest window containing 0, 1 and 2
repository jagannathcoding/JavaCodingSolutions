Smallest window containing 0, 1 and 2
EasyAccuracy: 49.73%Submissions: 52K+Points: 2
Given a string S consisting of the characters 0, 1 and 2. Your task is to find the length of the smallest substring of string S that contains all the three characters 0, 1 and 2. If no such substring exists, then return -1.


GFG 

Example 1:

Input:
S = 10212
Output:
3
Explanation:
The substring 102 is the smallest substring
that contains the characters 0, 1 and 2.
Example 2:

Input: 
S = 12121
Output:
-1
Explanation: 
As the character 0 is not present in the
string S, therefor no substring containing
all the three characters 0, 1 and 2
exists. Hence, the answer is -1 in this case.
Your Task:
Complete the function smallestSubstring() which takes the string S as input, and returns the length of the smallest substring of string S that contains all the three characters 0, 1 and 2.

Expected Time Complexity: O( length( S ) )
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ length( S ) ≤ 105
All the characters of String S lies in the set {'0', '1', '2'}

Company Tags
Paytm

class Solution {
    public int smallestSubstring(String s) {
        // Code here
        int i=0;
        int j=0;
        int one=0;
        int two=0;
        int zero=0;
        int minLen=Integer.MAX_VALUE;
        while(j<s.length())
        {
            if(s.charAt(j)=='0')
            {
                zero++;
            } 
            else if(s.charAt(j)=='1')
            {
                one++;
            } 
            else if(s.charAt(j)=='2')
            {
                two++;
            } 
            while(zero>0&&one>0&&two>0&&j-i+1>=3)
            {
                minLen=Math.min(minLen,j-i+1);
                if (s.charAt(i) == '0') zero--;
                else if (s.charAt(i) == '1') one--;
                else if (s.charAt(i) == '2') two--;
                i++;
            }
            
            j++;
        }
            
             return minLen == Integer.MAX_VALUE ? -1 : minLen;
            
            
        }
}
