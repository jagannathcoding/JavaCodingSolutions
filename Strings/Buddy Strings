859. Buddy Strings
Solved
Easy
Topics
Companies
Given two strings s and goal, return true if you can swap two letters in s so the result is equal to goal, otherwise, return false.

Swapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at s[i] and s[j].

For example, swapping at indices 0 and 2 in "abcd" results in "cbad".
 

Example 1:

Input: s = "ab", goal = "ba"
Output: true
Explanation: You can swap s[0] = 'a' and s[1] = 'b' to get "ba", which is equal to goal.
Example 2:

Input: s = "ab", goal = "ab"
Output: false
Explanation: The only letters you can swap are s[0] = 'a' and s[1] = 'b', which results in "ba" != goal.
Example 3:

Input: s = "aa", goal = "aa"
Output: true
Explanation: You can swap s[0] = 'a' and s[1] = 'a' to get "aa", which is equal to goal.



class Solution 
{
    boolean checkString(String s)
    {
        int arr[]=new int[26];
        for(char ch:s.toCharArray())
        {
            arr[ch-'a']++;
            if(arr[ch-'a']>1)return true;
        }
        return false;
    }
    public boolean buddyStrings(String s, String goal) 
    {
        if(s.length()!=goal.length())return false;

            if(s.equals(goal))return checkString(s);

            ArrayList<Integer>alist=new ArrayList<>();
            for(int i=0;i<s.length();i++)
            {
                if(s.charAt(i)!=goal.charAt(i))alist.add(i);
            }
            if(alist.size()!=2)return false;

            int firstIndex=alist.get(0);
            int secondIndex=alist.get(1);

            char temp[]=s.toCharArray();
            char a=temp[firstIndex];
            temp[firstIndex]=temp[secondIndex];
            temp[secondIndex]=a;

            return Arrays.equals(temp,goal.toCharArray());
            }
}
//tc:o(n)
//sc:o(n)
