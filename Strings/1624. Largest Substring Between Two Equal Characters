/*class Solution 
{
    public int maxLengthBetweenEqualCharacters(String s) 
    {
        int res=-1;
        for(int i=0;i<s.length();i++)
        {
            for(int j=i+1;j<s.length();j++)
            {
                if(s.charAt(i)==s.charAt(j))
                {
                    res=Math.max(res,j-i-1);
                }
            }
        }
        return res;
    }
}
tc:o(n^2)
sc:o(1)*/

/*Using HashMap
class Solution 
{
    public int maxLengthBetweenEqualCharacters(String s) 
    {
        HashMap<Character,Integer>map=new HashMap<>();
        int res=-1;
        for(int i=0;i<s.length();i++)
        {
            if(!map.containsKey(s.charAt(i)))
            {     
                  map.put(s.charAt(i),i);
            }
            else
            {
                res=Math.max(res,(i-map.get(s.charAt(i))-1));
            }
        }
        return res;
    }
}
tc:o(n)
sc:o(n)//using map
*/

class Solution 
{
    public int maxLengthBetweenEqualCharacters(String s) 
    {
        int cnt[]=new int[26];
        Arrays.fill(cnt,-1);
        int res=-1;
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            if(cnt[ch-'a']==-1)
            {
                cnt[ch-'a']=i;
            }
            else
            {
                res=Math.max(res,i-cnt[ch-'a']-1);
            }
        }
        return res;
    }
}
//tc:o(n)
//sc:o(1)
