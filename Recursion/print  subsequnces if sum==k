/// print all subsequnces if sum==k
import java.util.*;
import java.io.*;
class subsequnceprnitifsumequalsk
{
    static void solve(int nums[],int t,int k,int index,List<Integer>alist)
    {
        if(index==nums.length)
        {
            if(t==k)
            {
                System.out.print(alist);
            }
            return;
        }
        alist.add(nums[index]);
        t=t+nums[index];
        solve(nums,t,k,index+1,alist);
        alist.remove(alist.size()-1);
        t=t-nums[index];
        solve(nums,t,k,index+1,alist);
    }

    public static void main()throws IOException
    {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Enter size of array");
        int n=Integer.parseInt(br.readLine());
        int num[]=new int[n];
        System.out.println("Enter elements in an array");
        for(int i=0;i<n;i++)
        {
            num[i]=Integer.parseInt(br.readLine());
        }
        System.out.println("Original array "+Arrays.toString(num));
        System.out.println("Enter target sum");
        int t=Integer.parseInt(br.readLine());
        ArrayList<Integer>alist=new ArrayList<>();
        solve(num,0,t,0,alist);
    }
}
 
