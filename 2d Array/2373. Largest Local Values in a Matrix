2373. Largest Local Values in a Matrix

https://leetcode.com/problems/largest-local-values-in-a-matrix/description/?envType=daily-question&envId=2024-05-12

You are given an n x n integer matrix grid.

Generate an integer matrix maxLocal of size (n - 2) x (n - 2) such that:

maxLocal[i][j] is equal to the largest value of the 3 x 3 matrix in grid centered around row i + 1 and column j + 1.
In other words, we want to find the largest value in every contiguous 3 x 3 matrix in grid.

Return the generated matrix.

 

Example 1:


Input: grid = [[9,9,8,1],[5,6,2,6],[8,2,6,4],[6,2,2,2]]
Output: [[9,9],[8,6]]
Explanation: The diagram above shows the original matrix and the generated matrix.
Notice that each value in the generated matrix corresponds to the largest value of a contiguous 3 x 3 matrix in grid.
Example 2:


Input: grid = [[1,1,1,1,1],[1,1,1,1,1],[1,1,2,1,1],[1,1,1,1,1],[1,1,1,1,1]]
Output: [[2,2,2],[2,2,2],[2,2,2]]
Explanation: Notice that the 2 is contained within every contiguous 3 x 3 matrix in grid.
 

Constraints:

n == grid.length == grid[i].length
3 <= n <= 100
1 <= grid[i][j] <= 100



class Solution {
    int findMax(int [][]mat,int x,int y)
    {
        int maxElement=0;
        for(int i=x;i<x+3;i++)
        {
            for(int j=y;j<y+3;j++)
            {
                maxElement=Math.max(maxElement,mat[i][j]);
            }
        }
        return maxElement;
    }
    public int[][] largestLocal(int[][] grid) 
    {
        int len=grid.length;
        int maxMat[][]=new int[len-2][len-2];
        for(int i=0;i<len-2;i++)
        {
            for(int j=0;j<len-2;j++)
            {
                maxMat[i][j]=findMax(grid,i,j);
            }
        }
        return maxMat;
    }
}
//T.C : O(n*n)
//S.C : O(n*n) for the result but can ignore it because it's the result that we have to return
