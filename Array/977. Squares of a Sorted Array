/*class Solution {
    public int[] sortedSquares(int[] nums) {
        for(int i=0;i<nums.length;i++)
        {
            nums[i]=nums[i]*nums[i];
        }
        Arrays.sort(nums);
        return nums;
    }
}
tc:o(nlogn)
sc:o(1) (Not considering the space taken to store the result)*/
///approach2
class Solution {
    public int[] sortedSquares(int[] nums) {
        int i=0;
        int j=nums.length-1;
        int[] result = new int[nums.length];
        int k=nums.length-1;
        while(k>=0)
        {
            int a=nums[i]*nums[i];
            int b=nums[j]*nums[j];
            if(a>b)
            {
                result[k]=a;
                i++;
            }
            else
            {
                result[k]=b;
                j--;
            }
            k--;
        }
        return result;
    }
}
