349. Intersection of Two Arrays

https://leetcode.com/problems/intersection-of-two-arrays/description/?envType=daily-question&envId=2024-03-10


Solved
Easy
Topics
Companies
Given two integer arrays nums1 and nums2, return an array of their 
intersection
. Each element in the result must be unique and you may return the result in any order.

 

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.
 

Constraints:

1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000


//Approach-1 (Using two sets)
//T.C : O(m+n)
//S.C : O(m+n)
/*class Solution 
{
    public int[] intersection(int[] nums1, int[] nums2) 
    {
        HashSet<Integer>set1=new HashSet<>();
        HashSet<Integer>set2=new HashSet<>();
        for(int i:nums1)
        set1.add(i);

        for(int j:nums2)
        {
            if(set1.contains(j))
            {
                set2.add(j);
            }
        }

        int res[]=new int[set2.size()];
        int i=0;
        for(Integer x:set2)
        {
            res[i++]=x;
        }
        return res;
    }
}*/

///
approach 2
class Solution 
{
    public int[] intersection(int[] nums1, int[] nums2) 
    {
        HashMap<Integer,Integer>map=new HashMap<>();
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int i=0;
        int j=0;
        while(i<nums1.length&&j<nums2.length)
        {
            if(nums1[i]==nums2[j])
            {
                if(!map.containsKey(nums1[i]))
                map.put(nums1[i],map.getOrDefault(nums1[i],0)+1);

                i++;
                j++;
            }
            else if(nums1[i]>nums2[j])j++;
            else if(nums1[i]<nums2[j])i++;
        }
List<Integer>alist=new ArrayList<>();
for(Integer key:map.keySet())alist.add(key);


        int[] arr = alist.stream().mapToInt(k -> k).toArray();

        return arr;
    }
}
