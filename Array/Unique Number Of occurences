1207. Unique Number of Occurrences
Solved
Easy
Topics
Companies
Hint
Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000




class Solution 
{ 
    public boolean uniqueOccurrences(int[] arr) 
    {
       int nums[]=new int[2001];
       for(int i:arr)
       {
           nums[i+1000]++;
       }
       Arrays.sort(nums);
       System.out.print(Arrays.toString(nums));
       for(int i=1;i<2001;i++)
       {
           if(nums[i]!=0&&nums[i]==nums[i-1])return false;
       }
       return true;
    }
}

//T.C : O(nlogn)
//S.C : O(1)

//////////////////////
APPROACH -2 

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        HashMap<Integer,Integer>map=new HashMap<>();
        for(int i:arr)
        {
            map.put(i,map.getOrDefault(i,0)+1);
        }
        HashSet<Integer>set=new HashSet<>();
        for(int freq:map.values())
        {
            if(set.contains(freq))return false;
            set.add(freq);
        }
        return true;
        
    }
}
//TC:O(N)
//SC:O(N)
