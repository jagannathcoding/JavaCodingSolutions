class Solution 
{
    public int pivotIndex(int[] nums) 
    {

         if(nums.length== 1)
            return 0; //if only 1 element, it's left and right are equal 
        
        
        int s=0;
        for(int i:nums)s=s+i;

       
        int cs=0;
        for(int i=0;i<nums.length;i++)
        {
             int ls=cs;
             int rs=s-cs-nums[i];
             if(ls==rs)return i;

             cs=cs+nums[i];
        }
        return -1;
    }
}
/*
public class Solution {
    public int pivotIndex(int[] a) {
        long[] cumu_sum = new long[a.length];
        cumu_sum[0] = a[0];
        long totalSum = a[0];

        for (int i = 1; i < a.length; i++) {
            totalSum += a[i];
            cumu_sum[i] = cumu_sum[i - 1] + a[i];
        }

        /*
            Example:
            A[]      = {1, 3, 5,  2, 2 }
            cumu_sum = {1, 4, 9, 11, 13}
            TotalSum = 13
            
            For i = 1, cumu_sum = 4
            sum at the left of i = 1 : cumu_sum[i] - a[i] = 4-3 = 1.   (i.e. 1)
            
            sum at the right of i = 1 : TotalSum - left_sum - a[i] = 13 - 1 - 3 = 9. (i.e. 5 + 2 + 2)
        
        for (int i = 0; i < a.length; i++) {
            long left_sum = (i > 0) ? cumu_sum[i - 1] : 0;
            long right_sum = totalSum - left_sum - a[i];

            if (left_sum == right_sum) {
                return i;
            }
        }

        return -1;
    }


    tc:o(n)
    sc;o(n)
}*/
