class Solution {
    public void rotate(int[] nums, int k) {

        k=k%nums.length;
        int temp[]=new int[k];
        /*int z=0;
        for( int i=nums.length-k;i<nums.length;i++)///using z 
        {
            temp[z]=nums[i];
            z++;
        }*/
        for( int i=nums.length-k;i<nums.length;i++)///not using z
        {
              temp[i - (nums.length - k)] = nums[i];
        }
        for (int i = nums.length - 1; i >= k; i--)
        {
            nums[i] = nums[i - k];
        }
        for(int i=0;i<k;i++)
        {
            nums[i]=temp[i];
        }
    }
}




///APPRAOCH 2 
class Solution 
{
    public void rotate(int[] nums, int k) 
    {
        k=k%nums.length;
        reverse(nums,0,nums.length-1);
        reverse(nums,0,k-1);
        reverse(nums,k,nums.length -1);
    }
    public void reverse(int[] input, int start, int end)
    {
        while(start<=end)
        {
            int temp=input[start];
            input[start]=input[end];
            input[end]=temp;
            start++;
            end--;
        }
    }
}
