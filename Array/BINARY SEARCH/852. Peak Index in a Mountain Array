
Testcase
Testcase
Test Result
Code
852. Peak Index in a Mountain Array
Solved
Medium
Topics
Companies
An array arr is a mountain if the following properties hold:

arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i] 
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]
Given a mountain array arr, return the index i such that arr[0] < arr[1] < ... < arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].

You must solve it in O(log(arr.length)) time complexity.

 

Example 1:

Input: arr = [0,1,0]
Output: 1
Example 2:

Input: arr = [0,2,1,0]
Output: 1
Example 3:

Input: arr = [0,10,5,2]
Output: 1
 

Constraints:

3 <= arr.length <= 105
0 <= arr[i] <= 106
arr is guaranteed to be a mountain array.

class Solution {
    public int peakIndexInMountainArray(int[] nums) 
    {
        int lb=0;
        int ub=nums.length-1;
        while(lb<ub)
        {
            int mid=lb+(ub-lb)/2;
            if(nums[mid]<nums[mid+1])
            {
                lb=mid+1;
            }
            else
            {
                ub=mid;
            }
        }
        return lb;
        //return ub or return lb both will give same answer
    }
}
//tc:o(log n)
//sc:o(1)
