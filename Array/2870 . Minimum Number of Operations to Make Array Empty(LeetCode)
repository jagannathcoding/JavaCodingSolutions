/*2870. Minimum Number of Operations to Make Array Empty(LeetCode)*/
class Solution {
    public int minOperations(int[] nums) {


        HashMap<Integer,Integer>map=new HashMap<>();
        for(int i:nums)
        {
            map.put(i,map.getOrDefault(i,0)+1);
        }
       int res=0;
       for (Map.Entry<Integer, Integer> entry : map.entrySet()) 
       {
            int freq = entry.getValue();
            if(freq==1)return -1;

           res += Math.ceil((double) freq / 3);
        }
        return res
        ;
    }
}

/*Time complexity:
o(n)
Space complexity:
o(N)*/
