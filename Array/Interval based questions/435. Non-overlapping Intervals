435. Non-overlapping Intervals

https://leetcode.com/problems/non-overlapping-intervals/description/

435. Non-overlapping Intervals
Solved
Medium
Topics
Companies
Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.

 

Example 1:

Input: intervals = [[1,2],[2,3],[3,4],[1,3]]
Output: 1
Explanation: [1,3] can be removed and the rest of the intervals are non-overlapping.
Example 2:

Input: intervals = [[1,2],[1,2],[1,2]]
Output: 2
Explanation: You need to remove two [1,2] to make the rest of the intervals non-overlapping.
Example 3:

Input: intervals = [[1,2],[2,3]]
Output: 0
Explanation: You don't need to remove any of the intervals since they're already non-overlapping.
 

Constraints:

1 <= intervals.length <= 105
intervals[i].length == 2
-5 * 104 <= starti < endi <= 5 * 104


class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        
        Arrays.sort(intervals,(a,b)->Integer.compare(a[1],b[1]));

        int cnt=0;
        int l=intervals.length;
        int previousEndPoint=intervals[0][1];
        for(int i=1;i<l;i++)
        {
            if(intervals[i][0]<previousEndPoint)
            {
                cnt++;
            }
            else
            {
                previousEndPoint=intervals[i][1];
            }
        }
        return cnt;
    }
}
//tc:o(n)
//sc:o(1)
