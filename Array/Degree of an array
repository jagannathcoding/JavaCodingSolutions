class Solution {
    public int findShortestSubArray(int[] nums)
     {
         int degree=0;
         int min_len=0;
         HashMap<Integer,Integer>map=new HashMap<>();
         HashMap<Integer,Integer>pos=new HashMap<>();
         for(int i=0;i<nums.length;i++)
         {
             map.put(nums[i],map.getOrDefault(nums[i],0)+1);
             pos.putIfAbsent(nums[i],i);
             if(map.get(nums[i])>degree)
             {
                 degree=map.get(nums[i]);
                 min_len=i-pos.get(nums[i])+1;
             }
             else if(map.get(nums[i])==degree)
             {
                 min_len=Math.min(min_len,i-pos.get(nums[i])+1);
             }
         }
         return min_len;
    }
}
//tc:o(n)
//sc:o(n)
