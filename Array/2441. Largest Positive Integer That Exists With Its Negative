2441. Largest Positive Integer That Exists With Its Negative

https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/description/?envType=daily-question&envId=2024-05-02

2441. Largest Positive Integer That Exists With Its Negative
Solved
Easy
Topics
Companies
Hint
Given an integer array nums that does not contain any zeros, find the largest positive integer k such that -k also exists in the array.

Return the positive integer k. If there is no such integer, return -1.

 

Example 1:

Input: nums = [-1,2,-3,3]
Output: 3
Explanation: 3 is the only valid k we can find in the array.
Example 2:

Input: nums = [-1,10,6,7,-7,1]
Output: 7
Explanation: Both 1 and 7 have their corresponding negative values in the array. 7 has a larger value.
Example 3:

Input: nums = [-10,8,6,7,-2,-3]
Output: -1
Explanation: There is no a single valid k, we return -1.
 

Constraints:

1 <= nums.length <= 1000
-1000 <= nums[i] <= 1000
nums[i] != 0


********************* Approach -1********************
class Solution {
    public int findMaxK(int[] nums) {
        int res=-1;
       for(int i:nums)
       {
            for(int j:nums)
            {
                if(i==-j)
                {
                    res=Math.max(res,Math.abs(i));
                }
            }
       }
       return res;
    }
}
//tc:o(n)
//sc:o(1)
******************Approach -2**********
//tc:o(nlogn)
//sc:o(1)
class Solution {
    public int findMaxK(int[] nums) {
        Arrays.sort(nums);
        int i=0;
        int j=nums.length-1;
        while(i<j)
        {
            if(-nums[i]==nums[j])return nums[j];

            else if(-nums[i]<nums[j])j--;

            else if(-nums[i]>nums[j])i++;
        }
        return -1;
    }
}
*******************Approach -3**************
//tc:o(n)
//sc:o(n)
class Solution {
    public int findMaxK(int[] nums) {
        int res=-1;
        HashSet<Integer>set=new HashSet<>();
        for(int i:nums)
        {
            if(set.contains(-i))
            res=Math.max(res,Math.abs(i));

            set.add(i);
        }
        return res;
        
    }
}
**********************Approach -4****************
